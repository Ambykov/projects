# main.py

import asyncio
import logging
from load_data import load_all_tags_into_memory
from forecast import run_forecasting
from config import DATE_BEGIN
from log_config import setup_logging

setup_logging()
logger = logging.getLogger(__name__)


async def main_pipeline():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞")

    stop_event = asyncio.Event()

    loading_task = asyncio.create_task(load_all_tags_into_memory(stop_event))
    forecasting_task = asyncio.create_task(run_forecasting(stop_event))

    try:
        await asyncio.gather(loading_task, forecasting_task)
    except KeyboardInterrupt:
        logger.info("üõë –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        stop_event.set()


if __name__ == '__main__':
    logger.info("‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É")
    try:
        asyncio.run(main_pipeline())
    except KeyboardInterrupt:
        logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

#   venv312\Scripts\activate